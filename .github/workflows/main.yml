name: CryptoPredictBot workflow

on: [push]

jobs:
  formatting_and_tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu
    runs-on: ubuntu-latest
    steps:
      # Запуск actions checkout — готового скрипта
      # для клонирования репозитория
      - uses: actions/checkout@v3
      - name: Set up Python
        # Запуск actions setup-python — готового скрипта
        # для развёртывания окружения Python
        uses: actions/setup-python@v4
        with:
          # Выбор версии Python
          python-version: 3.10.5
      - name: Install dependencies
        run: |
          # обновление pip 
          python -m pip install --upgrade pip
          # установка зависимостей
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check lint with Black
        run: |
          # запуск проверки проекта c Black
          black --check --diff predict_stock_crypto/
      - name: Test with flake8
        run: |
          # запуск проверки проекта по flake8
          python -m flake8
    # - name: Python tests
    #   run: |
    # запустить встроеный модуль для тестирования
    # python -m unittest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: formatting_and_tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME_REPO }}:latest
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_to_docker_hub
  #   steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.PASSPHRASE }}
  #         script: |
  #           sudo docker-compose stop
  #           sudo docker-compose rm web
  #           touch .env
  #           echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
  #           echo DB_NAME=${{ secrets.DB_NAME }} >> .env
  #           echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
  #           echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
  #           echo DB_HOST=${{ secrets.DB_HOST }} >> .env
  #           echo DB_PORT=${{ secrets.DB_PORT }} >> .env
  #           sudo docker-compose up -d
